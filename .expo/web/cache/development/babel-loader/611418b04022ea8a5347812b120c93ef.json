{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Home from \"./screens/home\";\nimport User from \"./screens/user\";\nimport Login from \"./screens/login\";\nimport * as SplashScreen from \"expo-splash-screen\";\nimport { useEffect } from 'react';\nimport { useFonts } from 'expo-font';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function App() {\n  var Tab = createBottomTabNavigator();\n  var _useFonts = useFonts({\n      'sans-bold': require(\"./assets/fonts/PublicSans-Bold.ttf\"),\n      'sans-medium': require(\"./assets/fonts/PublicSans-Medium.ttf\"),\n      'sans-regular': require(\"./assets/fonts/PublicSans-Regular.ttf\"),\n      'sans-semibold': require(\"./assets/fonts/PublicSans-SemiBold.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontsLoaded = _useFonts2[0];\n  useEffect(function () {\n    function prepare() {\n      return _prepare.apply(this, arguments);\n    }\n    function _prepare() {\n      _prepare = _asyncToGenerator(function* () {\n        yield SplashScreen.preventAutoHideAsync();\n      });\n      return _prepare.apply(this, arguments);\n    }\n    prepare();\n  }, []);\n  var isLoggedIn = true;\n  if (!fontsLoaded) {\n    return undefined;\n  } else {\n    SplashScreen.hideAsync();\n  }\n  var Stack = createStackNavigator();\n  return _jsxs(_Fragment, {\n    children: [_jsx(StatusBar, {\n      translucent: true\n    }), _jsx(NavigationContainer, {\n      children: isLoggedIn ? _jsxs(Tab.Navigator, {\n        barStyle: [styles.navbar, {\n          backgroundColor: 'white'\n        }],\n        screenOptions: {\n          tabBarActiveTintColor: '#1E1E1E',\n          headerShown: false,\n          tabBarShowLabel: false,\n          tabBarStyle: {\n            height: 80\n          }\n        },\n        children: [_jsx(Tab.Screen, {\n          name: \"Home\",\n          component: Home,\n          options: {\n            tabBarIcon: function tabBarIcon(_ref) {\n              var color = _ref.color;\n              return _jsx(MaterialCommunityIcons, {\n                name: \"home\",\n                color: color,\n                size: 38\n              });\n            }\n          }\n        }), _jsx(Tab.Screen, {\n          name: \"Notas\",\n          component: User,\n          options: {\n            tabBarIcon: function tabBarIcon(_ref2) {\n              var color = _ref2.color;\n              return _jsx(MaterialCommunityIcons, {\n                name: \"clipboard-list\",\n                color: color,\n                size: 38\n              });\n            }\n          }\n        }), _jsx(Tab.Screen, {\n          name: \"User\",\n          component: User,\n          options: {\n            tabBarIcon: function tabBarIcon(_ref3) {\n              var color = _ref3.color;\n              return _jsx(MaterialCommunityIcons, {\n                name: \"account-circle\",\n                color: color,\n                size: 38\n              });\n            }\n          }\n        }), _jsx(Tab.Screen, {\n          name: \"Ementa\",\n          component: User,\n          options: {\n            tabBarIcon: function tabBarIcon(_ref4) {\n              var color = _ref4.color;\n              return _jsx(MaterialCommunityIcons, {\n                name: \"silverware\",\n                color: color,\n                size: 38\n              });\n            }\n          }\n        }), _jsx(Tab.Screen, {\n          name: \"Mais\",\n          component: User,\n          options: {\n            tabBarIcon: function tabBarIcon(_ref5) {\n              var color = _ref5.color;\n              return _jsx(MaterialCommunityIcons, {\n                name: \"dots-horizontal\",\n                color: color,\n                size: 38\n              });\n            }\n          }\n        })]\n      }) : _jsx(Stack.Navigator, {\n        children: _jsx(Stack.Screen, {\n          name: \"Login\",\n          options: {\n            headerShown: false\n          },\n          component: Login\n        })\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F6F6F6'\n  },\n  navbar: {\n    width: '100%',\n    height: 92,\n    alignContent: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["StatusBar","NavigationContainer","createMaterialBottomTabNavigator","MaterialCommunityIcons","createBottomTabNavigator","createStackNavigator","Home","User","Login","SplashScreen","useEffect","useFonts","App","Tab","require","fontsLoaded","prepare","preventAutoHideAsync","isLoggedIn","undefined","hideAsync","Stack","styles","navbar","backgroundColor","tabBarActiveTintColor","headerShown","tabBarShowLabel","tabBarStyle","height","tabBarIcon","color","StyleSheet","create","container","flex","width","alignContent","justifyContent"],"sources":["F:/cenas/Cenas/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\r\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport Home from './screens/home';\r\nimport User from './screens/user';\r\nimport Login from './screens/login';\r\nimport * as SplashScreen from \"expo-splash-screen\"\r\nimport { useEffect } from 'react';\r\nimport { useFonts } from 'expo-font'\r\nexport default function App() {\r\n  const Tab = createBottomTabNavigator();\r\n  const [fontsLoaded] = useFonts({\r\n    'sans-bold': require('./assets/fonts/PublicSans-Bold.ttf'),\r\n    'sans-medium': require('./assets/fonts/PublicSans-Medium.ttf'),\r\n    'sans-regular': require('./assets/fonts/PublicSans-Regular.ttf'),\r\n    'sans-semibold': require('./assets/fonts/PublicSans-SemiBold.ttf')\r\n  })\r\n\r\n  useEffect(() => {\r\n    async function prepare() {\r\n      await SplashScreen.preventAutoHideAsync();\r\n    }\r\n    prepare();\r\n\r\n  }, []);\r\n  let isLoggedIn = true; \r\n\r\n  if (!fontsLoaded) {\r\n    return undefined\r\n  }\r\n  else {\r\n    SplashScreen.hideAsync();\r\n  }\r\n  const Stack = createStackNavigator();\r\n  return (\r\n    <>\r\n    <StatusBar translucent></StatusBar>\r\n    \r\n\r\n    <NavigationContainer>\r\n    {isLoggedIn ? (\r\n        <Tab.Navigator  barStyle={[styles.navbar,{ backgroundColor: 'white' }]}\r\n        screenOptions={{\r\n          tabBarActiveTintColor: '#1E1E1E',\r\n          headerShown: false,\r\n          tabBarShowLabel: false,\r\n          tabBarStyle: { height: 80 },\r\n        }}>\r\n          <Tab.Screen name=\"Home\" component={Home}\r\n          options={{\r\n            \r\n            tabBarIcon: ({ color }) => (\r\n              <MaterialCommunityIcons name=\"home\" color={color} size={38} />\r\n            ),\r\n          }} />\r\n        <Tab.Screen name=\"Notas\" component={User}\r\n          options={{\r\n            \r\n            tabBarIcon: ({ color }) => (\r\n              <MaterialCommunityIcons name=\"clipboard-list\" color={color} size={38} />\r\n            ),\r\n          }} />\r\n          <Tab.Screen name=\"User\" component={User}\r\n          options={{\r\n            \r\n            tabBarIcon: ({ color }) => (\r\n              <MaterialCommunityIcons name=\"account-circle\" color={color} size={38} />\r\n            ),\r\n          }} />\r\n          <Tab.Screen name=\"Ementa\" component={User}\r\n          options={{\r\n            \r\n            tabBarIcon: ({ color }) => (\r\n              <MaterialCommunityIcons name=\"silverware\" color={color} size={38} />\r\n            ),\r\n          }} />\r\n          <Tab.Screen name=\"Mais\" component={User}\r\n          options={{\r\n            \r\n            tabBarIcon: ({ color }) => (\r\n              <MaterialCommunityIcons name=\"dots-horizontal\" color={color} size={38} />\r\n            ),\r\n          }} />\r\n        </Tab.Navigator>\r\n      ) : (\r\n        <Stack.Navigator>\r\n          <Stack.Screen name=\"Login\" options={{ headerShown: false }} component={Login}>\r\n            \r\n          </Stack.Screen>\r\n        </Stack.Navigator>\r\n      )}\r\n       </NavigationContainer>\r\n      \r\n       \r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#F6F6F6',\r\n\r\n  },\r\n  navbar:{\r\n    width:'100%',\r\n    height:92,\r\n    alignContent:'center',\r\n    justifyContent:'center',\r\n\r\n  }\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}